name: Build

on:
  push:
    paths:
      - ".github/workflows/build.yml"
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
    branches:
      - main
  pull_request:
    paths:
      - ".github/workflows/build.yml"
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Java environment for Android build
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "adopt"
          cache: "gradle"

      # Gradle cache for faster builds
      # - uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
      #       ${{ runner.os }}-gradle-
      #       ${{ runner.os }}-

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:"
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      # - name: Setup Android tools
      #   uses: maxim-lobanov/setup-android-tools@v1
      #   with:
      #     packages: |
      #       platform-tools
      #       build-tools;33.0.0
      #       platforms;android-33
      #     cache: true

      # ndk;19.2.5345600

      # - name: Accept Android Licenses
      #   run: yes | flutter doctor --android-licenses

      - name: Install dependencies
        run: flutter pub get

      # Create .env file for environment variables
      - name: Create .env file
        run: |
          cat <<EOF > .env
          GITHUBTOKEN=${{ secrets.GITHUBTOKEN }}
          EOF

      # Build APK with additional flags for optimization
      - run: flutter build apk --release

      # Upload to Telegram
      - name: Upload to Telegram
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
          -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -F document=@build/app/outputs/flutter-apk/app-release.apk \
          -F caption=app
